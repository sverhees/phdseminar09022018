install.packages("tidyverse")
library(tidyverse)
loan <- read_tsv("archibezhta.csv")
a <- unique(loan$english)
loan_common <- loan[(loan$list=='common'),]
# Filter non-duplicated meanings
a <- unique(loan_common$english)
loan_ab <- read_tsv("archibezhtagarik.csv")
library(tidyverse)
loan_ab <- read_tsv("archibezhtagarik.csv")
loan_r <- read_tsv("rutul.csv")
View(loan_ab)
loan_ab_borrowings <- loan_ab[(loan_ab$borrowed_status=='no evidence for borrowing')]
loan_ab_borrowings <- loan_ab[(loan_ab$borrowed_status=='no evidence for borrowing'),]
loan_ab_borrowings2 <- loan_ab_borrowings[unique(loan_ab_borrowings$english),]
View(loan_ab_borrowings2)
loan_ab_borrowings2 <- unique[(loan_ab_borrowings$english),]
loan_ab_borrowings2 <- unique(loan_ab_borrowings$english)
View(loan_ab_borrowings)
loan_ab_borrowings <- loan_ab[-(loan_ab$borrowed_status=='no evidence for borrowing'),]
loan_ab_borrowings <- loan_ab[!(loan_ab$borrowed_status=='no evidence for borrowing'),]
loan_ab_borrowings2 <- loan_ab_borrowings[unique(loan_ab_borrowings$english),]
loan_r_borrowings <- loan_r[unique(loan_r$name),]
df <- full_join(loan_r_borrowings, loan_ab_borrowings2, by 'english', 'name')
df <- full_join(loan_r_borrowings, loan_ab_borrowings2, 'english', 'name')
df <- full_join(loan_r_borrowings, loan_ab_borrowings2, 'name', 'english')
df <- full_join(loan_r_borrowings, loan_ab_borrowings2, "name", "english")
df <- full_join(loan_r_borrowings, loan_ab_borrowings2, by = c("name", "english"))
View(loan_ab_borrowings2)
View(loan_r_borrowings)
loan_ab_borrowings2 <- loan_ab_borrowings[!duplicated(loan_ab_borrowings$english),]
View(loan_ab_borrowings2)
loan_r_borrowings <- loan_r[!duplicated(loan_r$name),]
df <- full_join(loan_r_borrowings, loan_ab_borrowings2, by = c("name", "english"))
View(loan_ab_borrowings2)
loan_ab_borrowings2$english
df <- full_join(loan_r_borrowings, loan_ab_borrowings2, by = c("name", "english"))
intersect(loan_r_borrowings$name, loan_ab_borrowings2$english)
list <- intersect(loan_r_borrowings$name, loan_ab_borrowings2$english)
#bezhta
loan_ab_borrowings3 <- loan_ab[!(loan_ab$borrowed_status_1=='no evidence for borrowing'),]
loan_ab_borrowings4 <- loan_ab_borrowings3[!duplicated(loan_ab_borrowings3$english),]
list <- intersect(loan_r_borrowings$name, intersect(loan_ab_borrowings4$english, loan_ab_borrowings2$english))
all <- intersect(loan_r_borrowings$name, intersect(loan_ab_borrowings4$english, loan_ab_borrowings2$english))
archiloan <- intersect(loan_r_borrowings$name, loan_ab_borrowings2$english)
bezhtaloan <- intersect(loan_r_borrowings$name, loan_ab_borrowings4$english)
archibezhta <- intersect(loan_ab_borrowings2$english, loan_ab_borrowings4$english)
loanlist <- data.frame(cbind(all, archibezhta, archiloan, bezhtaloan))
View(loanlist)
df <- full_join(loan_ab_borrowings2, loan_ab_borrowings4, by = "english")
df <- full_join(loan_r_borrowings, loan_ab_borrowings2, by = "english")
colnames(loan_r_borrowings)[2] <- "english"
View(loan_r_borrowings)
df <- full_join(loan_r_borrowings, loan_ab_borrowings2, by = "english")
df2 <- full_join(df, loan_ab_borrowings4, by = "english")
View(df2)
all <- data.frame(intersect(loan_r_borrowings$name, intersect(loan_ab_borrowings4$english, loan_ab_borrowings2$english)))
all <- data.frame(intersect(loan_r_borrowings$english, intersect(loan_ab_borrowings4$english, loan_ab_borrowings2$english)))
View(all)
archiloan <- data.frame(intersect(loan_r_borrowings$name, loan_ab_borrowings2$english))
archiloan <- data.frame(intersect(loan_r_borrowings$english, loan_ab_borrowings2$english))
bezhtaloan <- data.frame(intersect(loan_r_borrowings$english, loan_ab_borrowings4$english))
archibezhta <- data.frame(intersect(loan_ab_borrowings2$english, loan_ab_borrowings4$english))
colnames(all)[1] <- "all"
colnames(archiloan)[1] <- "archiloan"
colnames(bezhtaloan)[1] <- "bezhtaloan"
colnames(archibezhta)[1] <- "archibezhta"
loanlist <- full_join(all, archiloan, by = c("all", "archiloan"))
colnames(all)[1] <- "word"
colnames(archiloan)[1] <- "word"
colnames(bezhtaloan)[1] <- "word"
colnames(archibezhta)[1] <- "word"
loanlist <- full_join(all, archiloan, by = "word")
View(loanlist)
match(all$word, archiloan$word)
df <- outer_join(all, archiloan)
all2 <- rep("all")
all2 <- rep("all", 69)
archiloan2 <- rep("archiloan", 121)
bezhtaloan2 <- rep("bezhtaloan", 100)
bezhtaloan2 <- rep("bezhtaloan", 100)
archibezhta2 <- rep("archibezhta", 241)
all <- cbind(all$word, all2)
all <- data.frame(intersect(loan_r_borrowings$english, intersect(loan_ab_borrowings4$english, loan_ab_borrowings2$english)))
colnames(all)[1] <- "word"
all <- data.frame(cbind(all$word, all2))
View(all)
all <- data.frame(intersect(loan_r_borrowings$english, intersect(loan_ab_borrowings4$english, loan_ab_borrowings2$english)))
View(all)
colnames(all)[1] <- "word"
all2 <- rep("all", 69)
all3 <- data.frame(cbind(all$word, all2))
View(all3)
all3 <- data.frame(cbind(all, all2))
View(all)
all$list <- rep("all", 69)
View(all)
archiloan$list <- rep("archiloan", 121)
bezhtaloan$list <- rep("bezhtaloan", 100)
archibezhta$list <- rep("archibezhta", 241)
loanlist <- full_join(all, archiloan, by = "word")
View(loanlist)
loanlist <- full_join(loanlist, bezhtaloan, by = "word")
loanlist <- full_join(loanlist, archibezhta, by = "word")
View(loanlist)
write_csv(loanlist, "loanlist.csv")
View(df)
View(df)
loan_ab_dup <- loan_ab[!duplicated(loan_ab$english),]
View(loanlist)
loan_r_borrowings$english
View(loan_r_borrowings)
a <- loan_r_borrowings$english
a$list <- rep("shortlist", 260)
a <- data.frame(loan_r_borrowings$english)
a$list <- rep("shortlist", 260)
loanlist <- full_join(loanlist, a, by = "word")
library(tidyverse)
loanlist2 <- full_join(a, loanlist, by = "word")
colnames(a)[1] <- "word"
loanlist2 <- full_join(a, loanlist, by = "word")
View(loanlist2)
write_csv(loanlist2, "loanlist.csv")
rm(list=ls())
devtools::install_github("ropensci/lingtypology")
install.packages("devtools")
devtools::install_github("ropensci/lingtypology")
library(lingtypology)
ec <- data.frame(aff.lang("East Caucasian"))
ec <- data.frame(lang.aff("East Caucasian"))
ec$aff <- lang.aff(ec$language)
View(ec)
colnames(ec)[1] <- "language"
ec$aff <- lang.aff(ec$language)
ec$aff <-
a <- lang.aff(ec$language)
View(ec)
write.csv(ec, "ec.csv")
rm(a)
library(tidyverse)
ec <- read_tsv("ec.csv")
ec <- read_tsv("ec.csv")
ec2 <- complete.cases(ec$evidentiality)
ec2 <- complete.cases[(ec$evidentiality),]
ec2 <- [complete.cases(ec$evidentiality),]
ec <- read_tsv("ec.csv")
rm(ec2)
map.feature(ec$language,
features = ec$aff,
stroke.features = ec$evidentiality,
tile = c("Esri.WorldTopoMap"))
library(lingtypology)
library(tidyverse)
ec <- read_tsv("ec.csv")
ec$aff <- factor(ec$aff, levels = c("Nakh", "Avar", "Andic", "Tsezic", "Lak", "Dargwa", "Lezgic", "Khinalugh"))
ec$evidentiality <- factor(ec$evidentiality, levels = c("+", "-"))
map.feature(ec$language,
features = ec$aff,
tile = c("Esri.WorldTopoMap"),
color = ec$color_aff,
stroke.features = ec$evidentiality,
stroke.color = c("black", "white"),
title = "Branch",
stroke.title = "Evidential")
all <- read_tsv("allev.csv")
map.feature(all$Language,
features = all$Language,
latitude = all$Lat,
longitude = all$Lon,
tile = c("Esri.WorldTopoMap"),
color = all$color,
legend = F)
View(ec)
all <- read_tsv("allev.csv")
map.feature(all$Language,
features = all$Language,
latitude = all$Lat,
longitude = all$Lon,
tile = c("Esri.WorldTopoMap"),
color = all$color,
legend = F)
all <- read_tsv("allev.csv")
map.feature(all$Language,
features = all$Language,
latitude = all$Lat,
longitude = all$Lon,
tile = c("Esri.WorldTopoMap"),
color = all$color,
legend = F)
map.feature(all$Language,
features = all$Language,
latitude = all$Lat,
longitude = all$Lon,
tile = c("Esri.WorldTopoMap"),
color = all$color,
opacity = 0.5,
legend = F,
stroke.features = all$evidentiality)
map.feature(all$Language,
features = all$Language,
latitude = all$Lat,
longitude = all$Lon,
tile = c("Esri.WorldTopoMap"),
color = all$color,
opacity = 0.8,
legend = F,
stroke.features = all$evidentiality)
map.feature(all$Language,
features = all$Language,
latitude = all$Lat,
longitude = all$Lon,
tile = c("Esri.WorldTopoMap"),
color = all$color,
opacity = 0.3,
legend = F,
stroke.features = all$evidentiality)
all$evidentiality <- factor(all$evidentiality, levels = c("+", "-"))
map.feature(all$Language,
features = all$Language,
latitude = all$Lat,
longitude = all$Lon,
tile = c("Esri.WorldTopoMap"),
color = all$color,
opacity = 0.3,
legend = F,
stroke.features = all$evidentiality,
stroke.title = "Evidential",
stroke.color = c("black", "white"))
map.feature(ec$language,
features = ec$aff,
tile = c("Esri.WorldTopoMap"),
color = ec$color_aff,
stroke.features = ec$evidentiality,
stroke.color = c("black", "white"),
title = "Branch",
stroke.title = "Evidential",
isogloss = as.data.frame(ec[,"evidentiality"]),
isogloss.longitude.width = 1.5,
isogloss.latitude.width = 1.5)
install.packages("xaringan")
getwd()
setwd("/home/samira/phdseminar09022018")
